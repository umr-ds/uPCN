import math


class SampleData(object):

    DEFAULT_START = (2016, 1, 9, 6, 0)
    DEFAULT_DURATION = 6.0

    GROUND_STATIONS = [
        ["TU Dresden", (51.049259, 13.73836)],
        ["Spitsbergen", (78.3554474, 19.255967)],
        ["Nairobi", (-1.318529, 36.8048159)],
        ["Libreville", (0.427006, 9.462391)],
        ["Cape Town", (-33.9146689, 18.3758788)],
        ["Quito", (-0.18659, -78.5706)],
        ["Bogota", (4.651455, -74.129267)],
        ["McMurdo Station", (-77.85, 166.666667)],
        ["Tierra del Fuego", (-54.7836777, -70.0204721)],
        ["Houston", (29.8168824, -95.6814736)],
        ["New Delhi", (28.623472, 77.19677)],
        ["Rio de Janeiro", (-22.9111721, -43.5884178)],
        ["Melbourne", (-37.8599509, 144.7994371)],
        ["Anchorage", (61.1076819, -149.9335041)],
        ["Beijing", (39.9385466, 116.1172808)],
        ["Honolulu", (21.32802, -157.86902)],
        ["Las Palmas", (28.10630, -15.4629)],
        ["London", (51.4766, 0.0)],
        ["Alert", (82.5, -62.3333)],
        ["Timbuktu", (16.77138, -3.02548)],
        ["Alcala de Henares", (40.482513, -3.363223)],
        ["Pasadena", (34.200714, -118.171394)],
    ]

    SATELLITES = {
        "SOMP": """SOMP
1 39134U 13015E   15308.22287209  .00007649  00000-0  43126-3 0  9994
2 39134  64.8727 329.0051 0022101 236.2370 123.6649 15.13640176139889
""",
        "QB50P1": """QB50P1
1 40025U 14033R   16081.16650287  .00001145  00000-0  13110-3 0  9993
2 40025  97.9350 346.6258 0012749   0.1285 359.9932 14.87884404 95113
""",
        "POLYITAN-1": """POLYITAN-1
1 40042U 14033AJ  16089.22167231  .00000971  00000-0  11338-3 0  9995
2 40042  97.9414 354.5453 0014190 318.7388  41.2755 14.87433838 96264
""",
        "TIGRISAT": """TIGRISAT
1 40043U 14033AK  16089.21956226  .00000377  00000-0  64131-4 0  9995
2 40043  97.9124 340.0617 0059162 285.2549  74.2124 14.73692313 95298
""",
        "LEMUR-1": """LEMUR-1
1 40044U 14033AL  16089.21506714  .00000375  00000-0  64078-4 0  9997
2 40044  97.9123 339.9297 0058306 285.9884  73.4907 14.73510525 95280
""",
        "AEROCUBE 6A": """AEROCUBE 6A
1 40045U 14033AM  16089.19056919  .00000697  00000-0  11057-3 0  9997
2 40045  97.9184 340.2262 0057460 282.2175  77.2603 14.74246265 95146
""",
        "AEROCUBE 6B": """AEROCUBE 6B
1 40046U 14033AN  16089.19077244  .00000752  00000-0  11880-3 0  9998
2 40046  97.9179 340.1908 0056808 281.9739  77.5105 14.74243185 95287
""",
        "UKUBE-1": """UKUBE-1
1 40074U 14037F   16089.12344532  .00000739  00000-0  98165-4 0  9990
2 40074  98.3345 178.7520 0005777  57.6488 302.5283 14.82953470 93203
""",
        "BRITE-PL 2": """BRITE-PL 2
1 40119U 14049B   16089.20398589  .00000392  00000-0  53715-4 0  9990
2 40119  97.9628 170.7663 0019098 100.2137 260.1231 14.83868255 87166
""",
        "FIREBIRD 4": """FIREBIRD 4
1 40378U 15003C   16089.19646423  .00005211  00000-0  23968-3 0  9990
2 40378  99.0822 180.9358 0146766  34.1352 326.9205 15.11790360 63690
""",
        "GRIFEX": """GRIFEX
1 40379U 15003D   16089.17648821  .00003916  00000-0  18794-3 0  9994
2 40379  99.0832 180.3019 0150409  37.1281 324.0233 15.10203716 63652
""",
        "EXOCUBE": """EXOCUBE
1 40380U 15003E   16089.18039826  .00003203  00000-0  15840-3 0  9994
2 40380  99.0864 179.9155 0153081  38.0133 323.1777 15.09106346 63628
""",
        "DEORBITSAIL": """DEORBITSAIL
1 40719U 15032E   16089.19900705  .00000918  00000-0  14254-3 0  9994
2 40719  98.0265 341.4990 0017639 130.2160 230.0596 14.75388420 38695
""",
        "FLOCK 1E-1": """FLOCK 1E-1
1 40723U 98067GF  16089.22869500  .00094340  00000-0  41266-3 0  9994
2 40723  51.6295  75.4061 0006974  66.3494  26.6016 15.83874561 40583
""",
        "FLOCK 1E-4": """FLOCK 1E-4
1 40724U 98067GG  16089.08239936  .00082292  00000-0  42487-3 0  9992
2 40724  51.6424  77.4470 0006906  64.4597  51.0623 15.80370383 40544
""",
        "FLOCK 1E-3": """FLOCK 1E-3
1 40725U 98067GH  16089.18579933  .00095426  00000-0  41122-3 0  9996
2 40725  51.6316  72.8713 0007342  54.2845  32.1572 15.84180315 40587
""",
        "S-CUBE": """S-CUBE
1 40898U 98067GY  16088.18433845  .00039153  00000-0  34392-3 0  9993
2 40898  51.6357  92.7905 0004307 309.7524  50.3093 15.68397845 29988
""",
        "GALASSIA": """GALASSIA
1 41170U 15077E   16087.52054763  .00004018  00000-0  19939-3 0  9994
2 41170  14.9930 187.0519 0014457 325.7155  34.2207 15.10078965 15401
""",
        "VELOX 2": """VELOX 2
1 41171U 15077F   16087.56137596  .00003121  00000-0  15435-3 0  9996
2 41171  14.9917 188.6024 0009541 304.9656  54.9771 15.08360784 15391
""",
        "AGGIESAT 4": """AGGIESAT 4
1 41313U 98067HP  16088.60055799  .00014033  00000-0  19813-3 0  9992
2 41313  51.6502  99.3473 0003446 281.7338  78.3269 15.56853087  9166
""",
        "BEVO 2": """BEVO 2
1 41314U 98067HQ  16089.22170326  .00019909  00000-0  26701-3 0  9997
2 41314  51.6516  95.9829 0002873 278.7988  81.2711 15.57946313  9069
""",
        "POPSAT-HIP-1": """POPSAT-HIP-1
1 40028U 14033U   16089.16418747  .00000570  00000-0  68532-4 0  9997
2 40028  97.9376 354.7739 0013482 330.6007  29.4459 14.87776300 96294
""",
        "QB50P2": """QB50P2
1 40032U 14033Y   16089.22070471  .00000745  00000-0  88436-4 0  9996
2 40032  97.9329 354.2111 0011329 327.0842  32.9667 14.87462932 96283
""",
        "ANTELSAT": """ANTELSAT
1 40034U 14033AA  16088.95615284  .00000559  00000-0  92198-4 0  9997
2 40034  97.9142 339.2958 0058184 284.1169  75.3583 14.73300832 95366
"""
    }

    DEFAULT_SATELLITE = "SOMP"

    @staticmethod
    def get_gs(number):
        mod = number % len(SampleData.GROUND_STATIONS)
        suffix = ""
        if number > len(SampleData.GROUND_STATIONS):
            suffix = "_{}".format(number // len(SampleData.GROUND_STATIONS))
        result = SampleData.GROUND_STATIONS[mod]
        result[0] += suffix
        result[1] = tuple(n / 180. * math.pi for n in result[1])
        return result

    @staticmethod
    def get_gs_count():
        return len(SampleData.GROUND_STATIONS)

    @staticmethod
    def get_sat(name=DEFAULT_SATELLITE):
        return {"id": name, "tle": SampleData.SATELLITES[name]}

    @staticmethod
    def get_multiple_sats(count):
        return [
            SampleData.get_sat(satid)
            for satid in list(SampleData.SATELLITES.keys())[0:count]
        ]
