start = bundle
   dtn-time = uint
   creation-timestamp = [dtn-time, sequence: uint]
   eid-generic = [uri-code, SSP: any]
   uri-code = uint
   eid = eid-choice .within eid-generic
   eid-choice /= [dtn-code, SSP: (text / 0)]
   dtn-code = 1 ; TBD
   eid-choice /= [ipn-code, SSP: [nodenum: uint, servicenum: uint]]
   ipn-code = 2 ; TBD
   bundle-control-flags = uint .bits bundleflagbits
   bundleflagbits = &(
     reserved: 15
     reserved: 14
     reserved: 13
     bundle-deletion-status-reports-are-requested: 12
     bundle-delivery-status-reports-are-requested: 11
     bundle-forwarding-status-reports-are-requested: 10
     custody-transfer-status-reports-are-requested: 9
     bundle-reception-status-reports-are-requested: 8
     bundle-contains-a-Manifest-block: 7
     status-time-is-requested-in-all-status-reports: 6
     user-application-acknowledgement-is-requested: 5
     destination-is-a-singleton-endpoint: 4
     custody-transfer-is-requested: 3
     bundle-must-not-be-fragmented: 2
     payload-is-an-administrative-record: 1
     bundle-is-a-fragment: 0
   )
   crc = uint
   block-control-flags = uint .bits blockflagbits
   blockflagbits = &(
     reserved: 7
     reserved: 6
     reserved: 5
     reserved: 4
     bundle-must-be-deleted-if-block-cannot-be-processed: 3
     status-report-must-be-transmitted-if-block-cannot-be-processed: 2
     block-must-be-removed-from-bundle-if-it-cannot-be-processed: 1
     block-must-be-replicated-in-every-fragment: 0
   )
   bundle = [primary-block, *extension-block, payload-block]
   primary-block = [
                 version: 7,
                 bundle-control-flags,
                 crc-type: uint,
                 destination: eid,
                 source-node: eid,
                 report-to: eid,
                 creation-timestamp,
                 lifetime: uint,
                 ? fragment-offset: uint,
                 ? total-application-data-length: uint,
                 ? crc,
   ]
   canonical-block-generic = [
                           block-type-code: uint,
                           canonical-block-common,
                           content: any
                           ]
   canonical-block-common = (
                          block-number: uint,
                          block-control-flags,
                          crc-type: uint,
                          ? crc,
                          block-data-length: uint
                          )
   canonical-block = canonical-block-choice .within canonical-block-generic
   canonical-block-choice /= payload-block
   payload-block = [1, canonical-block-common, adu-extent: payload]
   payload = bytes / bytes .cbor admin-record
   canonical-block-choice /= extension-block
   extension-block = extension-block-choice .within canonical-block
   extension-block-choice /= current-custodian-block
   current-custodian-block = [5, canonical-block-common, eid]
   extension-block-choice /= previous-node-block
   previous-node-block = [7, canonical-block-common, eid]
   extension-block-choice /= bundle-age-block
   bundle-age-block = [8, canonical-block-common, bundle-age: uint]
   extension-block-choice /= hop-count-block
   hop-count-block = [9, canonical-block-common,
                   [hop-limit: uint,
                    hop-count: uint]]
   admin-record-generic = [record-type: uint, any]
   admin-record = admin-record-choice .within admin-record-generic
   admin-record-choice /= bundle-status-report
   bundle-status-report = [1, [bundle-status-information,
                               bundle-status-reason: uint,
                               admin-common]]
   admin-common = (
                 source-node: eid,
                 creation-timestamp,
                 ? fragment-offset: uint,
                 ? payload-length: uint)
   bundle-status-information = [
     reporting-node-received-bundle: bundle-status-item,
     reporting-node-attempted-custody-transfer: bundle-status-item,
     reporting-node-forwarded-the-bundle: bundle-status-item,
     reporting-node-delivered-the-bundle: bundle-status-item,
     reporting-node-deleted-the-bundle: bundle-status-item
   ]
   bundle-status-item = [
                  asserted: bool,
                  ? time-of-assertion: dtn-time]
   admin-record-choice /= custody-signal
   custody-signal = [2, [custody-signal-type-code: uint,
                         custody-signal-information,
                         admin-common]]
   custody-signal-information = (custody-reason-code: uint / delegation-information)
   delegation-information = [
                   next-hop-node: eid,
                   seconds-until-forwarding: uint]
